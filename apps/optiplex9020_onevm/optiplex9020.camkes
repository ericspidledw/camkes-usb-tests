/*
 * Copyright 2016, Data 61
 * Commonwealth Scientific and Industrial Research Organisation (CSIRO)
 * ABN 41 687 119 230.
 *
 * This software may be distributed and modified according to the terms of
 * the GNU General Public License version 2. Note that NO WARRANTY is provided.
 * See "LICENSE_GPLv2.txt" for details.
 *
 * @TAG(D61_GPL)
 */

#include <autoconf.h>
#include <configurations/vm.h>
#include <string_reverse.h>

component Init0 {
    dataport Buf(STRING_REVERSE_BUFSIZE) dp1;
    dataport Buf(STRING_REVERSE_BUFSIZE) dp2;

    emits Ready ready;
    consumes Done done;

    has mutex cross_vm_event_mutex;

    VM_INIT_DEF()
}

import <StringReverse/StringReverse.camkes>;

component VM {
    composition {
        VM_COMPOSITION_DEF()
        VM_PER_VM_COMP_DEF(0)

        component StringReverse string_reverse;

        connection seL4SharedDataWithCaps cross_vm_conn(from string_reverse.src_dp,
                                                        to vm0.dp1);

        connection seL4SharedDataWithCaps cross_vm_large_conn(from string_reverse.dest_dp,
                                                              to vm0.dp2);

        connection seL4Notification ev2_conn(from vm0.ready,
                                             to string_reverse.ready);

        connection seL4Notification ev1_conn(from string_reverse.done,
                                             to vm0.done);

        connection seL4RPCCall cross_vm_putchar(from string_reverse.putchar,
                                                to serial.vm_putchar);
    }
    configuration {
        VM_CONFIGURATION_DEF()
        VM_PER_VM_CONFIG_DEF(0, 2)
        vm0.simple_untyped23_pool = 22;
        vm0.heap_size = 0x10000;
        vm0.guest_ram_mb = 128;
        vm0.kernel_cmdline = VM_GUEST_CMDLINE;
        vm0.kernel_image = C162_KERNEL_IMAGE;
        vm0.kernel_relocs = C162_KERNEL_IMAGE;
        vm0.initrd_image = C162_ROOTFS;
        vm0.iospace_domain = 0x0f;
        vm0_config.pci_devices_iospace = 1;

        vm0.dp1_id = 1;
        vm0.dp1_size = STRING_REVERSE_BUFSIZE;

        vm0.dp2_id = 2;
        vm0.dp2_size = STRING_REVERSE_BUFSIZE;
    }
}
